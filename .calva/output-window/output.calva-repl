; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user-activate꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: joyride...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
; Could not find namespace: om.core.
cljs꞉om-tut.core꞉> 
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +dev repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :dependencies conj '[cider/piggieback,"0.5.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.piggieback/wrap-cljs-repl"]' -- with-profile +dev repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: Leiningen + Figwheel Main...
;   The Calva Connection Log might have more connection progress information.
; There are no figwheel build files (.cljs.edn) in the project directory.
; Connection to Figwheel Main aborted.
; Error while connecting cljs REPL: Aborted
; Jack-in done.
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :dependencies conj '[cider/piggieback,"0.5.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.piggieback/wrap-cljs-repl"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: Leiningen + ClojureScript built-in for browser...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 

cljs꞉om-tut.core꞉> 
nil
cljs꞉om-tut.core꞉> 
#'om-tut.core/app-state
cljs꞉om-tut.core꞉> 
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :dependencies conj '[cider/piggieback,"0.5.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.piggieback/wrap-cljs-repl"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: Leiningen + ClojureScript built-in for browser...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
; WARNING: No such namespace: om, could not locate om.cljs, om.cljc, or JavaScript source providing "om" at line 1 <cljs repl>
; WARNING: Use of undeclared Var om/root at line 1 <cljs repl>
; WARNING: No such namespace: om, could not locate om.cljs, om.cljc, or JavaScript source providing "om" at line 3 <cljs repl>
; WARNING: Use of undeclared Var om/component at line 3 <cljs repl>
; WARNING: No such namespace: dom, could not locate dom.cljs, dom.cljc, or JavaScript source providing "dom" at line 3 <cljs repl>
; WARNING: Use of undeclared Var dom/h2 at line 3 <cljs repl>
; WARNING: Use of undeclared Var om-tut.core/app-state at line 4 <cljs repl>
; Execution error (TypeError) at (<cljs repl>:1).
; om.root is not a function
cljs꞉om-tut.core꞉> 
; Evaluating file: core.cljs
nil
cljs꞉om-tut.core꞉> 
; Execution error (ReferenceError) at (<cljs repl>:1).
; om is not defined
cljs꞉om-tut.core꞉> 
; Execution error (ReferenceError) at (<cljs repl>:1).
; om is not defined
cljs꞉om-tut.core꞉> 
; Execution error (ReferenceError) at (<cljs repl>:1).
; om is not defined
cljs꞉om-tut.core꞉> 
; Execution error (ReferenceError) at (<cljs repl>:1).
; om_tut is not defined
cljs꞉om-tut.core꞉> 
